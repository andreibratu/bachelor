"""
Project 4
Input: non-zero natural numbers k and n with k â‰¤ n
Output:
    1. the number of k-dim subspaces of the vector space Z class 2 of dim(2)
    2. A basis of each such subspace

Andrei Bratu
bratuandrei0@gmail.com
912
"""

from itertools import product, combinations  # Combinatorics library
from numpy import sum, transpose


def independent_bases(base_a, base_b):
    """
    Determine if two k-dim subspaces, given by their bases, are independent.

    Independence is checked by veryifing wether a vector generated by one
    of the bases can be obtained in the other base.
    """

    v_a = [x % 2 for x in transpose(sum(base_a, axis=0))]
    v_b = [x % 2 for x in transpose(sum(base_b, axis=0))]

    print(v_a, v_b)

    return False


k = int(input('Please input the dimension of the subspace: '))
n = int(input('Please input the dimension of the vector space: '))

vectors = list(product([0, 1], repeat=n))  # Generate all vectors of dim(n)
vectors.remove(tuple([0 for _ in range(n)]))
solution = []

for c in combinations(vectors, k):
    c = [list(v) for v in c]
    flag = True
    for base in solution:
        if not independent_bases(base, c):
            flag = False
            break
    if flag:
        solution.append(c)

print(len(solution))
for base in solution:
    print(base)
