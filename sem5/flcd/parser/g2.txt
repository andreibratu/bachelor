stmlist decllist ifstmt forstmt assignstmt lenstmt decl type type_arr const iostmt forstmt assignstmt lenstmt expression stm program relation type_simp condition term op sym
bool int real strconst < <= == > >= : ; read write len start identifier intconst charconst doubleconst for <- , do rof fi esle else end stop + - * // / % if ( )
program
program start@stmlist@stop
const intconst
const doubleconst
const charconst
const strconst
relation <
relation <=
relation ==
relation >
relation >=
type_simp bool
type_simp int
type_simp real
type_simp strconst
type_arr type_simp@[@intconst@]
type type_simp
type type_arr
decl identifier@:@type@;
decllist decl
decllist decl@decllist
stm decllist
stm ifstmt
stm forstmt
stm assignstmt
stm lenstmt
stm iostmt
stmlist stm
stmlist stm@stmlist
forstmt for@identifier@<-@term@,@condition@,@term@do@stmlist@rof
ifstmt if@condition@do@stmlist@fi
ifstmt if@condition@do@stmlist@fi@else@stmlist@esle
assignstmt identifier@<-@expression@;
expression identifier
expression const
iostmt read@identifier@;
iostmt write@term@;
lenstmt len@identifier@;
term const
term identifier
term identifier@[@term@]
sym +
sym -
sym *
sym //
sym /
sym %
op term@sym@term
op (@term@sym@term@)
expression term
expression op
expression op@sym@expression
condition expression@relation@expression